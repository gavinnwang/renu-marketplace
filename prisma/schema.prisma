// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL_PRISMA")
  relationMode = "prisma"
}

model User {
  id            Int         @id @default(autoincrement())
  name          String
  email         String      @unique
  profile_image String?
  role          Role        @default(STUDENT_USER)
  created_at    DateTime    @default(now()) @db.Timestamp(0)
  updated_at    DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  items         Item[]
  saved_items   SavedItem[]
  group_users   GroupUser[]
  Message       Message[]
}

enum Role {
  USER
  STUDENT_USER
  ADMIN
}

model Item {
  id          Int         @id @default(autoincrement())
  name        String
  price       Float
  image       ItemImage[]
  category    Category    @default(GENERAL)
  created_at  DateTime    @default(now()) @db.Timestamp(0)
  updated_at  DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  description String?
  user        User        @relation(fields: [user_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  user_id     Int
  status      ItemStatus  @default(ACTIVE)
  saved_items SavedItem[]
  groups      Group[]

  @@index([user_id], name: "user_id")
  @@index([category], name: "category")
}

enum ItemStatus {
  ACTIVE
  INACTIVE
}

model ItemImage {
  id      Int    @id @default(autoincrement())
  url     String
  item    Item   @relation(fields: [item_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  item_id Int

  @@index([item_id], name: "item_id")
}

model SavedItem {
  user_id Int
  item_id Int
  user    User @relation(fields: [user_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  item    Item @relation(fields: [item_id], references: [id], onUpdate: Restrict, onDelete: Cascade)

  @@id([user_id, item_id])
  @@index([user_id], name: "user_id")
  @@index([item_id], name: "item_id")
}

enum Category {
  MENS
  WOMENS
  HOME
  FURNITURE
  ELECTRONICS
  BIKES
  TICKETS
  GENERAL
  FREE
}

model GroupUser {
  group_id Int
  user_id  Int
  group    Group @relation(fields: [group_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  user     User  @relation(fields: [user_id], references: [id], onUpdate: Restrict, onDelete: Cascade)

  @@id([group_id, user_id])
  @@index([group_id], name: "group_id")
  @@index([user_id], name: "user_id")
}

model Group {
  id         Int         @id @default(autoincrement())
  user_id    Int
  item_id    Int
  item       Item        @relation(fields: [item_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  created_at DateTime    @default(now()) @db.Timestamp(0)
  GroupUser  GroupUser[]

  @@index([item_id], name: "item_id")
}

model Message {
  id      Int     @id @default(autoincrement())
  user_id Int 
  user    User    @relation(fields: [user_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  read    Boolean @default(false)
  content String

  @@index([user_id], name: "user_id")
}
