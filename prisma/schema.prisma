// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL_PRISMA")
  relationMode = "prisma"
}

model User {
  id            Int        @id @default(autoincrement())
  name          String
  email         String     @unique
  profile_image String?
  role          Role       @default(STUDENT_USER)
  created_at    DateTime   @default(now()) @db.Timestamp(0)
  updated_at    DateTime   @default(now()) @updatedAt @db.Timestamp(0)
  buyer_chats   ItemChat[] @relation("buyer_chats")

  items       Item[]
  saved_items SavedItem[]
  Message     Message[]
}

enum Role {
  USER
  STUDENT_USER
  ADMIN
}

model Item {
  id          Int         @id @default(autoincrement())
  name        String
  price       Float
  image       ItemImage[]
  category    Category    @default(GENERAL)
  created_at  DateTime    @default(now()) @db.Timestamp(0)
  updated_at  DateTime    @default(now()) @updatedAt @db.Timestamp(0)
  description String?
  user        User        @relation(fields: [user_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  user_id     Int
  status      ItemStatus  @default(ACTIVE)
  saved_items SavedItem[]
  chats       ItemChat[]

  @@index([user_id], name: "user_id")
  @@index([category], name: "category")
}

enum ItemStatus {
  ACTIVE
  INACTIVE
}

model ItemImage {
  id      Int    @id @default(autoincrement())
  url     String
  item    Item   @relation(fields: [item_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  item_id Int

  @@index([item_id], name: "item_id")
}

model SavedItem {
  user_id Int
  item_id Int
  user    User @relation(fields: [user_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  item    Item @relation(fields: [item_id], references: [id], onUpdate: Restrict, onDelete: Cascade)

  @@id([user_id, item_id])
  @@index([user_id], name: "user_id")
  @@index([item_id], name: "item_id")
}

enum Category {
  MENS
  WOMENS
  HOME
  FURNITURE
  ELECTRONICS
  BIKES
  TICKETS
  GENERAL
  FREE
}

model ItemChat {
  id       Int       @id @default(autoincrement())
  item_id  Int
  item     Item      @relation(fields: [item_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  buyer_id Int
  buyer    User      @relation("buyer_chats", fields: [buyer_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  messages Message[]

  @@unique([item_id, buyer_id])
  @@index([item_id], name: "item_id")
  @@index([buyer_id], name: "buyer_id")
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String   @db.VarChar(1000) 
  chat_id    Int
  sender_id  Int
  read       Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(0)
  chat       ItemChat @relation(fields: [chat_id], references: [id], onUpdate: Restrict, onDelete: Cascade)
  sender     User     @relation(fields: [sender_id], references: [id], onUpdate: Restrict, onDelete: Cascade)

  @@index([chat_id], name: "chat_id")
  @@index([sender_id], name: "sender_id")
}
